version: 0.2

phases:
  install:
    commands:
      - echo "Starting the install phase"
      - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

  pre_build:
    commands:
      - echo "Fetching secrets from Secrets Manager"
      - export DB_HOST=$(aws secretsmanager get-secret-value --secret-id Secret_Mysql_lenny --query SecretString --output text | jq -r .DB_HOST)
      - export DB_PORT=$(aws secretsmanager get-secret-value --secret-id Secret_Mysql_lenny --query SecretString --output text | jq -r .DB_PORT)
      - export DB_DATABASE=$(aws secretsmanager get-secret-value --secret-id Secret_Mysql_lenny --query SecretString --output text | jq -r .DB_DATABASE)
      - export DB_USERNAME=$(aws secretsmanager get-secret-value --secret-id Secret_Mysql_lenny --query SecretString --output text | jq -r .DB_USERNAME)
      - export DB_PASSWORD=$(aws secretsmanager get-secret-value --secret-id Secret_Mysql_lenny --query SecretString --output text | jq -r .DB_PASSWORD)
      - echo "DB_HOST: $DB_HOST"
      - echo "DB_PORT: $DB_PORT"
      - echo "DB_DATABASE: $DB_DATABASE"
      - echo "DB_USERNAME: $DB_USERNAME"
      - echo "Starting the pre-build phase"
      - composer install --no-interaction --prefer-dist --optimize-autoloader

  build:
    commands:
      - echo "Starting the build phase"
      - php artisan cache:clear 
      - echo "Creating the database if it does not exist"
      #- mysql -h $DB_HOST -u $DB_USERNAME -p$DB_PASSWORD -e "CREATE DATABASE IF NOT EXISTS crm;"
      - echo "Running migrations"
      - php artisan migrate --force
      #- php artisan config:cache
      #- php artisan route:cache
      

  post_build:
    commands:
      - echo "Starting the post-build phase"
      - zip -r deploy.zip .
      #- echo "Creating new application version in Elastic Beanstalk"
      #- aws elasticbeanstalk create-application-version --application-name Applications-Lenny --version-label build-v1 #--source-bundle S3Bucket=$CODEBUILD_S3_BUCKET,S3Key=$CODEBUILD_BUILD_ID/deploy.zip
      #- aws elasticbeanstalk update-environment --environment-name Applications-Lenny-env --version-label build-v1

artifacts:
  files:
    - deploy.zip
  discard-paths: yes
