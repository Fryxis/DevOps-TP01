version: '3.8'

services:
  # Base de donn√©es Mysql
  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - laravel_network
    ports: 
      - "3306:3306"

  # phpmyadmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - laravel_network

  # Framwork Laravel
  laravel:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel
    restart: always
    volumes:
      - ./:/var/www/html
    ports:
      - "8081:8081"
    networks:
      - laravel_network
    depends_on:
      - mysql

  # Serveur WEB - NGINX Serveur
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
    ports:
      - "8082:80"
    depends_on:
      - laravel
    networks:
      - laravel_network
  
  # Serveur SMTP - Mailhog
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    restart: always
    ports:
      - "1025:1025" # Port SMTP
      - "8025:8025" # Interface web
    networks:
      - laravel_network

networks:
  laravel_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
